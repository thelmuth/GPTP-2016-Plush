@InCollection{Spector:2013:GPTP,
  author =	"Lee Spector and Thomas Helmuth",
  title =	"Uniform Linear Transformation with Repair and
		 Alternation in Genetic Programming",
  booktitle =	"Genetic Programming Theory and Practice XI",
  year = 	"2013",
  series =	"Genetic and Evolutionary Computation",
  editor =	"Rick Riolo and Jason H. Moore and Mark Kotanchek",
  publisher =	"Springer",
  chapter =	"8",
  pages =	"137--153",
  address =	"Ann Arbor, USA",
  month =	"9-11 " # may,
  keywords =	"genetic algorithms, genetic programming, Uniform
		 mutation, Uniform crossover, ULTRA, Push, PushGP, Drug
		 bioavailability problem, Pagie-1 problem, Factorial
		 regression, Boolean multiplexer problem",
  isbn13 =	"978-1-4939-0374-0",
  doi =  	"doi:10.1007/978-1-4939-0375-7\_8",
  abstract =	"Several genetic programming researchers have argued
		 for the utility of genetic operators that act
		 uniformly. By act uniformly we mean two specific
		 things: that the probability of an inherited program
		 component being modified during inheritance is
		 independent of the size and shape of the parent
		 programs beyond the component in question; and that
		 pairs of parents are combined in ways that allow
		 arbitrary combinations of components from each parent
		 to appear in the child. Uniform operators described in
		 previous work have had limited utility, however,
		 because of a mismatch between the relevant notions of
		 uniformity and the hierarchical structure and variable
		 sizes of many genetic programming representations. In
		 this chapter we describe a new genetic operator, ULTRA,
		 which incorporates aspects of both mutation and
		 crossover and acts approximately uniformly across
		 programs of variable sizes and structures. ULTRA treats
		 hierarchical programs as linear sequences and includes
		 a repair step to ensure that syntax constraints are
		 satisfied after variation. We show that on the drug
		 bioavailability and Pagie-1 benchmark problems ULTRA
		 produces significant improvements both in
		 problem-solving power and in program size relative to
		 standard operators. Experiments with factorial
		 regression and with the Boolean 6-multiplexer problem
		 demonstrate that ULTRA can manipulate programs that
		 make use of hierarchical structure, but also that it is
		 not always beneficial. The demonstrations evolve
		 programs in the Push programming language, which makes
		 repair particularly simple, but versions of the
		 technique should be applicable in other genetic
		 programming systems as well.",
  notes =	"http://cscs.umich.edu/gptp-workshops/ Part of
		 \cite{Riolo:2013:GPTP} published after the workshop in
		 2013",
  doi-url =	"http://dx.doi.org/10.1007/978-1-4939-0375-7\_8",
}

@InProceedings{Helmuth:2015:GECCO,
  author =	"Thomas Helmuth and Lee Spector",
  title =	"General Program Synthesis Benchmark Suite",
  booktitle =	"GECCO '15: Proceedings of the 2015 on Genetic and
		 Evolutionary Computation Conference",
  year = 	"2015",
  NOeditor =	"Sara Silva and Anna I Esparcia-Alcazar and Manuel
		 Lopez-Ibanez and Sanaz Mostaghim and Jon Timmis and
		 Christine Zarges and Luis Correia and Terence Soule and
		 Mario Giacobini and Ryan Urbanowicz and Youhei Akimoto
		 and Tobias Glasmachers and Francisco {Fernandez de
		 Vega} and Amy Hoover and Pedro Larranaga and Marta Soto
		 and Carlos Cotta and Francisco B. Pereira and Julia
		 Handl and Jan Koutnik and Antonio Gaspar-Cunha and
		 Heike Trautmann and Jean-Baptiste Mouret and Sebastian
		 Risi and Ernesto Costa and Oliver Schuetze and
		 Krzysztof Krawiec and Alberto Moraglio and Julian F.
		 Miller and Pawel Widera and Stefano Cagnoni and JJ
		 Merelo and Emma Hart and Leonardo Trujillo and Marouane
		 Kessentini and Gabriela Ochoa and Francisco Chicano and
		 Carola Doerr",
  isbn13 =	"978-1-4503-3472-3",
  pages =	"1039--1046",
  keywords =	"genetic algorithms, genetic programming",
  month =	"11-15 " # jul,
  organisation = "SIGEVO",
  address =	"Madrid, Spain",
  URL =  	"http://doi.acm.org/10.1145/2739480.2754769",
  doi =  	"doi:10.1145/2739480.2754769",
  publisher =	"ACM",
  publisher_address = "New York, NY, USA",
  abstract =	"Recent interest in the development and use of
		 non-trivial benchmark problems for genetic programming
		 research has highlighted the scarcity of general
		 program synthesis (also called traditional programming)
		 benchmark problems. We present a suite of 29 general
		 program synthesis benchmark problems systematically
		 selected from sources of introductory computer science
		 programming problems. This suite is suitable for
		 experiments with any program synthesis system driven by
		 input/output examples. We present results from
		 illustrative experiments using our reference
		 implementation of the problems in the PushGP genetic
		 programming system. The results show that the problems
		 in the suite vary in difficulty and can be useful for
		 assessing the capabilities of a program synthesis
		 system.",
  notes =	"Also known as \cite{2754769} GECCO-2015 A joint
		 meeting of the twenty fourth international conference
		 on genetic algorithms (ICGA-2015) and the twentith
		 annual genetic programming conference (GP-2015)",
  doi-url =	"http://dx.doi.org/10.1145/2739480.2754769",
}

@incollection{Helmuth:2015:GPTP,
	author = {Thomas Helmuth and Nicholas Freitag McPhee and Lee Spector},
	title = {Lexicase selection for program synthesis: a diversity analysis},
	booktitle = {Genetic Programming Theory and Practice XIII},
	year = {2015},
	NOeditor = {?},
	series = {Genetic and Evolutionary Computation},
	publisher = {Springer},
	pubstate = {In press}
}

@incollection{McPhee:2015:GPTP,
	author = {Nicholas Freitag McPhee and David Donatucci and Thomas Helmuth},
	title = {Using Graph Databases to Explore the Dynamics of Genetic Programming Runs},
	booktitle = {Genetic Programming Theory and Practice XIII},
	year = {2015},
	NOeditor = {?},
	series = {Genetic and Evolutionary Computation},
	publisher = {Springer},
	pubstate = {In press}
}

@Book{koza:book,
  author =	"John R. Koza",
  title =	"Genetic Programming: On the Programming of Computers
		 by Means of Natural Selection",
  year = 	"1992",
  publisher =	"MIT Press",
  address =	"Cambridge, MA, USA",
  keywords =	"genetic algorithms, genetic programming, text book",
  ISBN = 	"0-262-11170-5",
  URL =  	"http://mitpress.mit.edu/books/genetic-programming",
  abstract =	"Overview Genetic programming may be more powerful than
		 neural networks and other machine learning techniques,
		 able to solve problems in a wider range of disciplines.
		 In this ground-breaking book, John Koza shows how this
		 remarkable paradigm works and provides substantial
		 empirical evidence that solutions to a great variety of
		 problems from many different fields can be found by
		 genetically breeding populations of computer programs.
		 Genetic Programming contains a great many worked
		 examples and includes a sample computer code that will
		 allow readers to run their own programs. In getting
		 computers to solve problems without being explicitly
		 programmed, Koza stresses two points: that seemingly
		 different problems from a variety of fields can be
		 reformulated as problems of program induction, and that
		 the recently developed genetic programming paradigm
		 provides a way to search the space of possible computer
		 programs for a highly fit individual computer program
		 to solve the problems of program induction. Good
		 programs are found by evolving them in a computer
		 against a fitness measure instead of by sitting down
		 and writing them. John R. Koza is Consulting Associate
		 Professor in the Computer Science Department at
		 Stanford University. Endorsements The research reported
		 in this book is a tour de force. For the first time,
		 since the idea was bandied about in the 1940s and early
		 1950s, we have a non-trivial, nontailored set of
		 examples of automatic programming. -- John Holland",
}

@InProceedings{Helmuth:2011:GECCOcomp,
  author =	"Thomas Helmuth and Lee Spector and Brian Martin",
  title =	"Size-based tournaments for node selection",
  booktitle =	"GECCO 2011 Graduate students workshop",
  year = 	"2011",
  editor =	"Miguel Nicolau",
  isbn13 =	"978-1-4503-0690-4",
  keywords =	"genetic algorithms, genetic programming",
  pages =	"799--802",
  month =	"12-16 " # jul,
  organisation = "SIGEVO",
  address =	"Dublin, Ireland",
  doi =  	"doi:10.1145/2001858.2002095",
  publisher =	"ACM",
  publisher_address = "New York, NY, USA",
  abstract =	"In genetic programming, the reproductive operators of
		 crossover and mutation both require the selection of
		 nodes from the reproducing individuals. Both unbiased
		 random selection and Koza 90/10 mechanisms remain
		 popular, despite their arbitrary natures and a lack of
		 evidence for their effectiveness. It is generally
		 considered problematic to select from all nodes with a
		 uniform distribution, since this causes terminal nodes
		 to be selected most of the time. This can limit the
		 complexity of program fragments that can be exchanged
		 in crossover, and it may also lead to code bloat when
		 leaf nodes are replaced with larger new subtrees during
		 mutation. We present a new node selection method that
		 selects nodes based on a tournament, from which the
		 largest participating subtree is selected. We show this
		 method of size-based tournaments improves performance
		 on three standard test problems with no increases in
		 code bloat as compared to unbiased and Koza 90/10
		 selection methods.",
  notes =	"Also known as \cite{2002095} Distributed on CD-ROM at
		 GECCO-2011. ACM Order Number 910112.",
  doi-url =	"http://dx.doi.org/10.1145/2001858.2002095",
}

@Article{Luke:2006:EC:FIXED,
  author =	"Sean Luke and Liviu Panait",
  title =	"A Comparison of Bloat Control Methods for Genetic
		 Programming",
  journal =	"Evolutionary Computation",
  year = 	"2006",
  volume =	"14",
  number =	"3",
  pages =	"309--344",
  month =	"Fall",
  keywords =	"genetic algorithms, genetic programming",
}

@InProceedings{vanbelle:2002:EuroGP:NOERROR,
  title =	"Uniform Subtree Mutation",
  author =	"Terry {Van Belle} and David H. Ackley",
  editor =	"James A. Foster and Evelyne Lutton and Julian Miller
		 and Conor Ryan and Andrea G. B. Tettamanzi",
  booktitle =	"Genetic Programming, Proceedings of the 5th European
		 Conference, EuroGP 2002",
  volume =	"2278",
  series =	"LNCS",
  pages =	"152--161",
  publisher =	"Springer-Verlag",
  address =	"Kinsale, Ireland",
  publisher_address = "Berlin",
  month =	"3-5 " # apr,
  year = 	"2002",
}

@TechReport{page:CSRP-98-20,
  author =	"Jonathan Page and Riccardo Poli and William B.
		 Langdon",
  title =	"Smooth Uniform Crossover with Smooth Point Mutation in
		 Genetic Programming: {A} Preliminary Study",
  institution =  "University of Birmingham, School of Computer Science",
  number =	"CSRP-98-20",
  month =	dec,
  year = 	"1998",
  file = 	"/1998/CSRP-98-20.ps.gz",
  URL =  	"ftp://ftp.cs.bham.ac.uk/pub/tech-reports/1998/CSRP-98-20.ps.gz",
  ftpaddress =	"ftp.cs.bham.ac.uk",
  reportfilename = "pub/tech-reports/1998/CSRP-98-20.ps.gz",
  keywords =	"genetic algorithms, genetic programming",
  abstract =	"we examine the behaviour of the uniform crossover and
		 point mutation GP operators on the even-n-parity
		 problem for n = 3, 4, 6 and present a novel
		 representation of function nodes, designed to allow the
		 search operators to make smaller movements around the
		 solution space. Using this representation, performance
		 on the even-6-parity problem is improved by three
		 orders of magnitude relative to the estimate given for
		 standard GP.",
}

@InProceedings{poli:1998:local,
  author =	"Riccardo Poli and William B. Langdon",
  title =	"On the Search Properties of Different Crossover
		 Operators in Genetic Programming",
  booktitle =	"Genetic Programming 1998: Proceedings of the Third
		 Annual Conference",
  year = 	"1998",
  editor =	"John R. Koza and Wolfgang Banzhaf and Kumar
		 Chellapilla and Kalyanmoy Deb and Marco Dorigo and
		 David B. Fogel and Max H. Garzon and David E. Goldberg
		 and Hitoshi Iba and Rick Riolo",
  pages =	"293--301",
  address =	"University of Wisconsin, Madison, Wisconsin, USA",
  publisher_address = "San Francisco, CA, USA",
  month =	"22-25 " # jul,
  publisher =	"Morgan Kaufmann",
  keywords =	"genetic algorithms, genetic programming",
  ISBN = 	"1-55860-548-7",
  URL =  	"http://www.cs.essex.ac.uk/staff/poli/papers/Poli-GP1998.pdf",
  URL =  	"http://citeseer.ist.psu.edu/329745.html",
  URL =  	"http://citeseer.ist.psu.edu/502272.html",
  abstract =	"In this paper we study and compare the search
		 properties of different crossover operators in genetic
		 programming (GP) using probabilistic models and
		 experiments to assess the amount of genetic material
		 exchanged between the parents to generate the
		 offspring. These operators are: standard crossover,
		 one-point crossover and a new operator, uniform
		 crossover. Our analysis suggests that standard
		 crossover is a local and biased search operator not
		 ideal to explore the search space of programs
		 effectively. One-point crossover is better in some
		 cases as it is able to perform a global search at the
		 beginning of a run, but it suffers from the same
		 problems as standard crossover later on. Uniform
		 crossover largely overcomes these limitations as it is
		 global and less biased.",
  notes =	"GP-98. Based on \cite{poli:1998:localTR}",
}

@Article{poli:2000:22par,
  author =	"Riccardo Poli and Jonathan Page",
  title =	"Solving High-Order {Boolean} Parity Problems with
		 Smooth Uniform Crossover, Sub-Machine Code {GP} and
		 Demes",
  journal =	"Genetic Programming and Evolvable Machines",
  year = 	"2000",
  volume =	"1",
  number =	"1/2",
  pages =	"37--56",
  month =	apr,
  keywords =	"genetic algorithms, genetic programming, uniform
		 crossover, subsymbolic representation, sub-machine-code
		 gp, demes, parity problems",
  ISSN = 	"1389-2576",
  doi =  	"doi:10.1023/A:1010068314282",
  URL =  	"http://citeseer.ist.psu.edu/335584.html",
  abstract =	"We propose and study new search operators and a novel
		 node representation that can make GP fitness landscapes
		 smoother. Together with a tree evaluation method known
		 as sub-machine-code GP and the use of demes, these make
		 up a recipe for solving very large parity problems
		 using GP. We tested this recipe on parity problems with
		 up to 22 input variables, solving them with a very high
		 success probability.",
  notes =	"poli:2000:22par, Article ID: 253704",
  doi-url =	"http://dx.doi.org/10.1023/A:1010068314282",
}

@InProceedings{LaCava:2014:GPTP,
  author =	"William {La Cava} and Lee Spector",
  title =	"Inheritable Epigenetics in Genetic Programming",
  booktitle =	"Genetic Programming Theory and Practice XII",
  year = 	"2014",
  editor =	"Rick Riolo and William P. Worzel and Mark Kotanchek",
  series =	"Genetic and Evolutionary Computation",
  pages =	"37--51",
  address =	"Ann Arbor, USA",
  month =	"8-10 " # may,
  publisher =	"Springer",
}

@InProceedings{LaCava:2014:GECCOcomp,
  author =	"William {La Cava} and Lee Spector and Kourosh Danai
		 and Matthew Lackner",
  title =	"Evolving differential equations with developmental
		 linear genetic programming and epigenetic hill
		 climbing",
  booktitle =	"GECCO Comp '14: Proceedings of the 2014 conference
		 companion on Genetic and evolutionary computation
		 companion",
  year = 	"2014",
  editor =	"Christian Igel and Dirk V. Arnold and Christian Gagne
		 and Elena Popovici and Anne Auger and Jaume Bacardit
		 and Dimo Brockhoff and Stefano Cagnoni and Kalyanmoy
		 Deb and Benjamin Doerr and James Foster and Tobias
		 Glasmachers and Emma Hart and Malcolm I. Heywood and
		 Hitoshi Iba and Christian Jacob and Thomas Jansen and
		 Yaochu Jin and Marouane Kessentini and Joshua D.
		 Knowles and William B. Langdon and Pedro Larranaga and
		 Sean Luke and Gabriel Luque and John A. W. McCall and
		 Marco A. {Montes de Oca} and Alison Motsinger-Reif and
		 Yew Soon Ong and Michael Palmer and Konstantinos E.
		 Parsopoulos and Guenther Raidl and Sebastian Risi and
		 Guenther Ruhe and Tom Schaul and Thomas Schmickl and
		 Bernhard Sendhoff and Kenneth O. Stanley and Thomas
		 Stuetzle and Dirk Thierens and Julian Togelius and
		 Carsten Witt and Christine Zarges",
  isbn13 =	"978-1-4503-2881-4",
  keywords =	"genetic algorithms, genetic programming: Poster",
  pages =	"141--142",
  month =	"12-16 " # jul,
  organisation = "SIGEVO",
  address =	"Vancouver, BC, Canada",
  doi =  	"doi:10.1145/2598394.2598491",
  publisher =	"ACM",
  publisher_address = "New York, NY, USA",
}

@InProceedings{LaCava:2015:GECCO,
  author =	"William {La Cava} and Thomas Helmuth and Lee Spector
		 and Kourosh Danai",
  title =	"Genetic Programming with Epigenetic Local Search",
  booktitle =	"GECCO '15: Proceedings of the 2015 on Genetic and
		 Evolutionary Computation Conference",
  year = 	"2015",
  editor =	"Sara Silva and Anna I Esparcia-Alcazar and Manuel
		 Lopez-Ibanez and Sanaz Mostaghim and Jon Timmis and
		 Christine Zarges and Luis Correia and Terence Soule and
		 Mario Giacobini and Ryan Urbanowicz and Youhei Akimoto
		 and Tobias Glasmachers and Francisco {Fernandez de
		 Vega} and Amy Hoover and Pedro Larranaga and Marta Soto
		 and Carlos Cotta and Francisco B. Pereira and Julia
		 Handl and Jan Koutnik and Antonio Gaspar-Cunha and
		 Heike Trautmann and Jean-Baptiste Mouret and Sebastian
		 Risi and Ernesto Costa and Oliver Schuetze and
		 Krzysztof Krawiec and Alberto Moraglio and Julian F.
		 Miller and Pawel Widera and Stefano Cagnoni and JJ
		 Merelo and Emma Hart and Leonardo Trujillo and Marouane
		 Kessentini and Gabriela Ochoa and Francisco Chicano and
		 Carola Doerr",
  isbn13 =	"978-1-4503-3472-3",
  pages =	"1055--1062",
  keywords =	"genetic algorithms, genetic programming",
  month =	"11-15 " # jul,
  organisation = "SIGEVO",
  address =	"Madrid, Spain",
}

@Article{journals/ijait/OlteanGDM09,
  title =	"Genetic Programming with Linear Representation: a
		 Survey",
  author =	"Mihai Oltean and Crina Grosan and Laura Diosan and
		 Cristina Mihaila",
  journal =	"International Journal on Artificial Intelligence
		 Tools",
  year = 	"2009",
  number =	"2",
  volume =	"18",
  pages =	"197--238",
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming, linear genetic programming, gene
		 expression programming, multi expression programming,
		 grammatical evolution, stack-based genetic
		 programming",
  doi =  	"doi:10.1142/S0218213009000111",
  bibdate =	"2009-09-23",
  bibsource =	"DBLP,
		 http://dblp.uni-trier.de/db/journals/ijait/ijait18.html#OlteanGDM09",
  abstract =	"Genetic Programming (GP) is an automated method for
		 creating computer programs starting from a high-level
		 description of the problem to be solved. Many variants
		 of GP have been proposed in the recent years. In this
		 paper we are reviewing the main GP variants with linear
		 representation. Namely, Linear Genetic Programming,
		 Gene Expression Programming, Multi Expression
		 Programming, Grammatical Evolution, Cartesian Genetic
		 Programming and Stack-Based Genetic Programming. A
		 complete description is provided for each method. The
		 set of applications where the methods have been applied
		 and several Internet sites with more information about
		 them are also given.",
  doi-url =	"http://dx.doi.org/10.1142/S0218213009000111",
}

@InProceedings{ryan:1998:geepal,
  author =	"Conor Ryan and J. J. Collins and Michael O'Neill",
  title =	"Grammatical Evolution: Evolving Programs for an
		 Arbitrary Language",
  booktitle =	"Proceedings of the First European Workshop on Genetic
		 Programming",
  year = 	"1998",
  editor =	"Wolfgang Banzhaf and Riccardo Poli and Marc Schoenauer
		 and Terence C. Fogarty",
  volume =	"1391",
  series =	"LNCS",
  pages =	"83--96",
  address =	"Paris",
  publisher_address = "Berlin",
  month =	"14-15 " # apr,
  publisher =	"Springer-Verlag",
  keywords =	"genetic algorithms, genetic programming, grammatical
		 evolution",
  ISBN = 	"3-540-64360-5",
  URL =  	"http://www.lania.mx/~ccoello/eurogp98.ps.gz",
  URL =  	"http://citeseer.ist.psu.edu/ryan98grammatical.html",
  doi =  	"doi:10.1007/BFb0055930",
  size = 	"14 pages",
  abstract =	"We describe a Genetic Algorithm that can evolve
		 complete programs. Using a variable length linear
		 genome to govern how a Backus Naur Form grammar
		 definition is mapped to a program, expressions and
		 programs of arbitrary complexity may be evolved. Other
		 automatic programming methods are described, before our
		 system, Grammatical Evolution, is applied to a symbolic
		 regression problem.",
  notes =	"EuroGP'98",
  affiliation =  "University of Limerick Dept. Of Computer Science and
		 Information Systems Ireland Ireland",
  doi-url =	"http://dx.doi.org/10.1007/BFb0055930",
}