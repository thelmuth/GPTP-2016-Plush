@InCollection{Spector:2013:GPTP,
  author =	"Lee Spector and Thomas Helmuth",
  title =	"Uniform Linear Transformation with Repair and
		 Alternation in Genetic Programming",
  booktitle =	"Genetic Programming Theory and Practice XI",
  year = 	"2013",
  series =	"Genetic and Evolutionary Computation",
  editor =	"Rick Riolo and Jason H. Moore and Mark Kotanchek",
  publisher =	"Springer",
  chapter =	"8",
  pages =	"137--153",
  address =	"Ann Arbor, USA",
  month =	"9-11 " # may,
  keywords =	"genetic algorithms, genetic programming, Uniform
		 mutation, Uniform crossover, ULTRA, Push, PushGP, Drug
		 bioavailability problem, Pagie-1 problem, Factorial
		 regression, Boolean multiplexer problem",
  isbn13 =	"978-1-4939-0374-0",
  doi =  	"doi:10.1007/978-1-4939-0375-7\_8",
  abstract =	"Several genetic programming researchers have argued
		 for the utility of genetic operators that act
		 uniformly. By act uniformly we mean two specific
		 things: that the probability of an inherited program
		 component being modified during inheritance is
		 independent of the size and shape of the parent
		 programs beyond the component in question; and that
		 pairs of parents are combined in ways that allow
		 arbitrary combinations of components from each parent
		 to appear in the child. Uniform operators described in
		 previous work have had limited utility, however,
		 because of a mismatch between the relevant notions of
		 uniformity and the hierarchical structure and variable
		 sizes of many genetic programming representations. In
		 this chapter we describe a new genetic operator, ULTRA,
		 which incorporates aspects of both mutation and
		 crossover and acts approximately uniformly across
		 programs of variable sizes and structures. ULTRA treats
		 hierarchical programs as linear sequences and includes
		 a repair step to ensure that syntax constraints are
		 satisfied after variation. We show that on the drug
		 bioavailability and Pagie-1 benchmark problems ULTRA
		 produces significant improvements both in
		 problem-solving power and in program size relative to
		 standard operators. Experiments with factorial
		 regression and with the Boolean 6-multiplexer problem
		 demonstrate that ULTRA can manipulate programs that
		 make use of hierarchical structure, but also that it is
		 not always beneficial. The demonstrations evolve
		 programs in the Push programming language, which makes
		 repair particularly simple, but versions of the
		 technique should be applicable in other genetic
		 programming systems as well.",
  notes =	"http://cscs.umich.edu/gptp-workshops/ Part of
		 \cite{Riolo:2013:GPTP} published after the workshop in
		 2013",
  doi-url =	"http://dx.doi.org/10.1007/978-1-4939-0375-7\_8",
}

@InProceedings{Helmuth:2015:GECCO,
  author =	"Thomas Helmuth and Lee Spector",
  title =	"General Program Synthesis Benchmark Suite",
  booktitle =	"GECCO '15: Proceedings of the 2015 on Genetic and
		 Evolutionary Computation Conference",
  year = 	"2015",
  NOeditor =	"Sara Silva and Anna I Esparcia-Alcazar and Manuel
		 Lopez-Ibanez and Sanaz Mostaghim and Jon Timmis and
		 Christine Zarges and Luis Correia and Terence Soule and
		 Mario Giacobini and Ryan Urbanowicz and Youhei Akimoto
		 and Tobias Glasmachers and Francisco {Fernandez de
		 Vega} and Amy Hoover and Pedro Larranaga and Marta Soto
		 and Carlos Cotta and Francisco B. Pereira and Julia
		 Handl and Jan Koutnik and Antonio Gaspar-Cunha and
		 Heike Trautmann and Jean-Baptiste Mouret and Sebastian
		 Risi and Ernesto Costa and Oliver Schuetze and
		 Krzysztof Krawiec and Alberto Moraglio and Julian F.
		 Miller and Pawel Widera and Stefano Cagnoni and JJ
		 Merelo and Emma Hart and Leonardo Trujillo and Marouane
		 Kessentini and Gabriela Ochoa and Francisco Chicano and
		 Carola Doerr",
  isbn13 =	"978-1-4503-3472-3",
  pages =	"1039--1046",
  keywords =	"genetic algorithms, genetic programming",
  month =	"11-15 " # jul,
  organisation = "SIGEVO",
  address =	"Madrid, Spain",
  URL =  	"http://doi.acm.org/10.1145/2739480.2754769",
  doi =  	"doi:10.1145/2739480.2754769",
  publisher =	"ACM",
  publisher_address = "New York, NY, USA",
  abstract =	"Recent interest in the development and use of
		 non-trivial benchmark problems for genetic programming
		 research has highlighted the scarcity of general
		 program synthesis (also called traditional programming)
		 benchmark problems. We present a suite of 29 general
		 program synthesis benchmark problems systematically
		 selected from sources of introductory computer science
		 programming problems. This suite is suitable for
		 experiments with any program synthesis system driven by
		 input/output examples. We present results from
		 illustrative experiments using our reference
		 implementation of the problems in the PushGP genetic
		 programming system. The results show that the problems
		 in the suite vary in difficulty and can be useful for
		 assessing the capabilities of a program synthesis
		 system.",
  notes =	"Also known as \cite{2754769} GECCO-2015 A joint
		 meeting of the twenty fourth international conference
		 on genetic algorithms (ICGA-2015) and the twentith
		 annual genetic programming conference (GP-2015)",
  doi-url =	"http://dx.doi.org/10.1145/2739480.2754769",
}